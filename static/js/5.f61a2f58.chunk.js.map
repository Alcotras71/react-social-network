{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Main/Dialogs/Dialogs.module.css","components/Main/Dialogs/DialogItem/DialogItem.jsx","components/Main/Dialogs/Message/Message.jsx","components/Main/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.jsx","components/Main/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","useField","field","Input","createField","tag","label","type","placeholder","name","validator","text","validate","defaultValidator","required","maxLength","value","length","DialogItem","path","id","item","active","to","src","Message","message","AddMessageForm","initialValues","messageText","onSubmit","dialogs__inputs","onClick","deleteMessage","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogs__items","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/5.f61a2f58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3VohF\",\"error\":\"FormsControls_error__24i9u\",\"formSummaryError\":\"FormsControls_formSummaryError__-uaBO\",\"form__btn\":\"FormsControls_form__btn__3KY7R\"};","import React from 'react';\nimport s from './FormsControls.module.css';\nimport { useField } from 'formik';\n\nconst FormControl = ({ meta: { touched, error }, children }) => {\n  const hasError = touched && error;\n  return (\n    <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\n      {children}\n      {hasError ? <span>{error}</span> : null}\n    </div>\n  );\n};\n\nexport const Textarea = (props) => {\n  const [field, meta] = useField(props);\n  return (\n    <FormControl {...props} meta={meta}>\n      <textarea {...field} {...props} />\n    </FormControl>\n  );\n};\n\nexport const Input = (props) => {\n  const [field, meta] = useField(props);\n  return (\n    <FormControl {...props} meta={meta}>\n      <input {...field} {...props} />\n    </FormControl>\n  );\n};\n\nexport const createField = ( tag, label, type, placeholder, name, validator, text = '' ) => {\n  if (tag === 'input') {\n    return label ? (\n      <label>\n        <Input\n          type={type}\n          placeholder={placeholder}\n          name={name}\n          validate={validator}\n        />\n        {text}\n      </label>\n    ) : (\n      <div>\n        <Input\n          type={type}\n          placeholder={placeholder}\n          name={name}\n          validate={validator}\n        />\n        {text}\n      </div>\n    );\n  } else if ('textarea') {\n    return (\n      <div>\n        <Textarea\n          placeholder={placeholder}\n          name={name}\n          validate={validator}\n        />\n      </div>\n    );\n  }\n};\n","export const defaultValidator = (required, maxLength) => (value) => {\n  let error;\n  if (!value && required) {\n    error = 'Required';\n  } else if (value.length > maxLength && maxLength) {\n    error = `Max length is ${maxLength} symbols`;\n  }\n\n  return error;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2uix0\",\"dialogs__items\":\"Dialogs_dialogs__items__7SD2O\",\"active\":\"Dialogs_active__2UJdE\",\"dialogs__inputs\":\"Dialogs_dialogs__inputs__-shDI\",\"messages\":\"Dialogs_messages__3C6Uo\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.item + ' ' + s.active}>\r\n      <NavLink to={path}>\r\n        <img src=\"https://i.pinimg.com/originals/9c/77/46/9c7746225873e02d83b9315501b8dd2f.jpg\"/>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Form, Formik } from 'formik';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Textarea,createField } from '../../common/FormsControls/FormsControls';\r\nimport { defaultValidator } from '../../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem key={d.id} name={d.name} id={d.id} />\r\n  ));\r\n\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message key={m.id} message={m.message} />\r\n  ));\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.messageText);\r\n  };\r\n\r\n  const deleteMessage = () => {\r\n    props.deleteMessage();\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs__items}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageForm\r\n          onSubmit={addNewMessage}\r\n          deleteMessage={deleteMessage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        messageText: '',\r\n      }}\r\n      onSubmit={props.onSubmit}\r\n    >\r\n      <Form className={s.dialogs__inputs}>\r\n        {createField( 'textarea', false, '', 'Enter your message', 'messageText', defaultValidator(true, 50))}\r\n        <button type={'submit'}>Send</button>\r\n        <button type={'button'} onClick={props.deleteMessage}>\r\n          Delete\r\n        </button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\nimport connect from 'react-redux/lib/connect/connect';\nimport { Redirect } from 'react-router-dom';\n\nconst mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport const WithAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={'/login'} />;\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedAuthRedirectComponent;\n};\n","import { sendMessage, deleteMessage } from '../../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport connect from 'react-redux/lib/connect/connect';\r\nimport { WithAuthRedirect } from '../../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    sendMessage,\r\n    deleteMessage,\r\n  }),\r\n  WithAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}